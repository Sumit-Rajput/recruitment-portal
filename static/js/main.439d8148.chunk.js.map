{"version":3,"sources":["Api/api.js","constants.js","Api/index.js","Routes/paths.js","Containers/Home/index.js","Containers/CandidateDetails/index.js","Containers/Result/index.js","Routes/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["get","url","a","fetch","response","json","data","console","error","APPLICATION_STATE","getCandidatesData","map","candidate","state","log","PATHS","HOME_URL","CANDIDATES_DETAILS","SHORTLISTED","REJECTED","Search","Input","Meta","Card","withRouter","candidates","history","useState","searchedText","updateSearchedText","filteredList","setFilteredList","useEffect","list","filter","name","toLowerCase","includes","placeholder","allowClear","enterButton","size","style","width","margin","onSearch","text","type","height","onClick","push","grid","gutter","xs","sm","md","lg","xl","dataSource","renderItem","Item","id","marginTop","hoverable","avatar","src","Image","title","Text","Typography","updateCandidateApplicationState","match","params","matchedCandidate","useMemo","find","goBack","isShortlisted","isRejected","strong","danger","Title","location","pathname","replace","pageTitle","level","itemLayout","Routes","exact","path","from","to","Header","Layout","Content","App","setCandidates","fetchData","className","theme","mode","padding","newState","newList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.439d8148.chunk.js","sourcesContent":["export const get = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Got error for URL: ', url,  error);\n    throw error;\n  }\n}","export const BASE_URL = 'http://localhost:3000/he-public-data/users49b8675.json';\n\nexport const APPLICATION_STATE = {\n  SHORTLISTED: 'shortlisted',\n  REJECTED: 'rejected',\n  IN_PROGRESS: 'inProgress'\n}","import { get } from './api';\nimport { BASE_URL, APPLICATION_STATE } from '../constants'; \n\nexport const getCandidatesData = async () => {\n  try {\n    const data = await get(BASE_URL);\n    return data.map(candidate => ({\n      ...candidate,\n      state: APPLICATION_STATE.IN_PROGRESS,\n    }));\n  } catch (error) {\n    console.log('Error')\n  }\n}","const PATHS = {\n  HOME_URL: '/',\n  CANDIDATES_DETAILS: '/:id',\n  SHORTLISTED: '/shortlisted',\n  REJECTED: '/rejected',\n};\n\nexport default PATHS;","import React, { useState, useEffect } from 'react';\nimport { Avatar, Card, Input, Button, List } from 'antd';\nimport { withRouter } from 'react-router';\nimport './Home.css';\nimport PATHS from '../../Routes/paths'\n\nconst { Search } = Input;\nconst { Meta } = Card;\n\nconst Home = ({ candidates, history }) => {\n  const [searchedText, updateSearchedText] = useState('');\n  const [filteredList, setFilteredList] = useState([]);\n\n  useEffect(() => {\n    const list = candidates.filter(\n      candidate => candidate.name.toLowerCase().includes(searchedText.toLowerCase())\n    );\n    setFilteredList(list)\n  }, [candidates, searchedText])\n\n  return (\n    <>\n      <Search\n        placeholder=\"Enter Candidate Name\"\n        allowClear\n        enterButton=\"Search\"\n        size=\"large\"\n        style={{ width: 320, margin: '10px 10px' }}\n        onSearch={(text) => updateSearchedText(text)}\n      />\n\n      <Button \n        type=\"primary\"\n        style={{ height: 40, margin: '10px 10px' }}\n        onClick={() => history.push(PATHS.SHORTLISTED)}\n      >\n        Shortlisted Candidates\n      </Button>\n      <Button \n        type=\"primary\"\n        style={{ height: 40, margin: '10px 10px' }}\n        onClick={() => history.push(PATHS.REJECTED)}\n      >\n        Rejected Candidates\n      </Button>\n\n      <List \n        grid={{ gutter: 16, xs: 1, sm: 2, md: 3, lg: 4, xl: 4 }}\n        dataSource={filteredList}\n        renderItem={candidate => (\n          <List.Item>\n            <Card onClick={() => history.push(`/${candidate.id}`)} style={{ width: 230, marginTop: 16 }} hoverable>\n              <Meta\n                avatar={\n                  <Avatar src={candidate.Image} />\n                }\n                title={candidate.name}\n              />\n            </Card>\n          </List.Item>\n        )}\n      />\n    </>\n  );\n}\n\nexport default withRouter(Home);\n","import React, { useMemo } from 'react';\nimport { withRouter } from 'react-router';\nimport { Image, Typography, Button, Space } from 'antd';\nimport { APPLICATION_STATE } from '../../constants'; \n\nconst { Text } = Typography;\n\nconst CandidateDetails = ({ \n  candidates,\n  updateCandidateApplicationState,\n  match,\n  history,\n}) => {\n  const {id} = match.params;\n\n  const matchedCandidate = useMemo(\n    () => candidates.find(candidate => candidate.id === id), [candidates, id]\n  );\n\n  const goBack = () => {\n    history.push('/')\n  }\n\n  const shortlisted = () => {\n    updateCandidateApplicationState(matchedCandidate.id, APPLICATION_STATE.SHORTLISTED);\n    goBack();\n  }\n\n  const rejected = () => {\n    updateCandidateApplicationState(matchedCandidate.id, APPLICATION_STATE.REJECTED);\n    goBack();\n  }\n\n  const isShortlisted = matchedCandidate && matchedCandidate.state !== APPLICATION_STATE.SHORTLISTED;\n  const isRejected = matchedCandidate && matchedCandidate.state !== APPLICATION_STATE.REJECTED;\n\n  return (\n    <div>\n      {\n        matchedCandidate ? \n        (\n          <Space style={{ margin: 10 }}>\n            <Image width={200} src={matchedCandidate.Image}/>\n            <Space size=\"large\">\n              <Text strong>{matchedCandidate.name}</Text>\n              {isShortlisted && <Button type=\"primary\" onClick={shortlisted}>Shortlist</Button>}\n              {isRejected && <Button danger type=\"primary\" onClick={rejected}>Reject</Button>}\n            </Space>\n          </Space>\n        ) :\n        <Text strong>No User Found!</Text>\n      }\n    </div>\n  );\n}\n\nexport default withRouter(CandidateDetails);\n","import React from 'react';\nimport { List, Avatar, Typography } from 'antd';\nimport { withRouter } from 'react-router';\nimport { APPLICATION_STATE } from '../../constants'; \n\nconst { Title } = Typography;\n\nconst Result = ({ candidates, location }) => {\n  \n  const state = location.pathname.replace('/', '');\n  const pageTitle = state === APPLICATION_STATE.SHORTLISTED ? 'Shortlisted Candidates' : 'Rejected Candidates';\n  const data = candidates.filter(candidate => candidate.state === state)\n  \n  return (\n    <>\n      <Title level={2}>{pageTitle}</Title>\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={candidate => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={<Avatar src={candidate.Image} />}\n              title={candidate.name}\n            />\n          </List.Item>\n        )}\n      />\n    </>\n  );\n}\n\nexport default withRouter(Result);\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport PATHS from './paths';\nimport Home from '../Containers/Home';\nimport CandidateDetails from '../Containers/CandidateDetails';\nimport Result from '../Containers/Result';\n\nconst Routes = ({ candidates, updateCandidateApplicationState }) => (\n  <Switch>\n    <Route exact path={PATHS.HOME_URL}>\n      <Home candidates={candidates}/>\n    </Route>\n    <Route exact path={PATHS.SHORTLISTED}>\n      <Result candidates={candidates}/>\n    </Route>\n    <Route exact path={PATHS.REJECTED}>\n      <Result candidates={candidates}/>\n    </Route>\n    <Route exact path={PATHS.CANDIDATES_DETAILS}>\n      <CandidateDetails \n        candidates={candidates}\n        updateCandidateApplicationState={updateCandidateApplicationState}\n      />\n    </Route>\n    <Redirect from=\"/*\" to={PATHS.HOME_URL} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { getCandidatesData } from '../Api';\nimport Routes from '../Routes';\n\nconst { Header, Content } = Layout;\n\nconst App = () => {\n  const [ candidates, setCandidates ] = useState([]);\n\n  const updateCandidateApplicationState = (id, newState) => {\n    const newList = [ ...candidates ];\n    const candidateToBeUpdated = newList.find(candidate => candidate.id === id);\n    candidateToBeUpdated.state = newState;\n\n    setCandidates(newList)\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getCandidatesData();\n      setCandidates(data);\n    }\n    fetchData();\n  }, [])\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item>\n            <Link to=\"/\">Recruitment</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px', height: 'calc(100vh - 60px)' }}>\n        <Routes\n          candidates={candidates}\n          updateCandidateApplicationState={updateCandidateApplicationState}\n        />\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}